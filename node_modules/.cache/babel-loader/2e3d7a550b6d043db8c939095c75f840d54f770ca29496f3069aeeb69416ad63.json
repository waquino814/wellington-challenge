{"ast":null,"code":"var _jsxFileName = \"/Users/wellingtonaquino/Documents/code_place/react/wellington-challenge/src/components/FirmFacts/FirmFacts.tsx\";\n// src/components/FirmFacts/FirmFacts.tsx\nimport React from 'react';\nimport './FirmFacts.scss';\nimport FirmFactCard from '../FirmFactCard/FirmFactCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirmFacts = () => {\n  const cards = [{\n    variant: 'default',\n    text: 'This is a one line button'\n  }, {\n    variant: 'border',\n    text: 'This is a two line button that terminates with ellipsis'\n  }, {\n    variant: 'default',\n    text: 'This is a one line button'\n  }, {\n    variant: 'border',\n    text: 'This is a two line button that terminates with ellipsis'\n  }, {\n    variant: 'default',\n    text: 'This is a one line button'\n  }, {\n    variant: 'border',\n    text: 'This is a two line button that terminates with ellipsis'\n  }, {\n    variant: 'border',\n    text: 'This is a one line button'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"firmFacts-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"firmFacts-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Firm Facts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"firmFacts\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(FirmFactCard, {\n        variant: card.variant,\n        buttonText: card.text,\n        isTwoLine: card.text.length > 30 // Example condition for two-line text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = FirmFacts;\nexport default FirmFacts;\nvar _c;\n$RefreshReg$(_c, \"FirmFacts\");","map":{"version":3,"names":["React","FirmFactCard","jsxDEV","_jsxDEV","FirmFacts","cards","variant","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","buttonText","isTwoLine","length","_c","$RefreshReg$"],"sources":["/Users/wellingtonaquino/Documents/code_place/react/wellington-challenge/src/components/FirmFacts/FirmFacts.tsx"],"sourcesContent":["// src/components/FirmFacts/FirmFacts.tsx\nimport React from 'react';\nimport './FirmFacts.scss';\nimport FirmFactCard from '../FirmFactCard/FirmFactCard';\n\nconst FirmFacts: React.FC = () => {\n  const cards = [\n    { variant: 'default', text: 'This is a one line button' },\n    { variant: 'border', text: 'This is a two line button that terminates with ellipsis' },\n    { variant: 'default', text: 'This is a one line button' },\n    { variant: 'border', text: 'This is a two line button that terminates with ellipsis' },\n    { variant: 'default', text: 'This is a one line button' },\n    { variant: 'border', text: 'This is a two line button that terminates with ellipsis' },\n    { variant: 'border', text: 'This is a one line button' },\n  ];\n\n  return (\n    <div className=\"firmFacts-wrapper\">\n      <div className=\"firmFacts-title\">\n        <span>Firm Facts</span>\n        <button className=\"close-button\">X</button>\n      </div>\n      <div className=\"firmFacts\">\n        {cards.map((card, index) => (\n          <FirmFactCard\n            key={index}\n            variant={card.variant}\n            buttonText={card.text}\n            isTwoLine={card.text.length > 30} // Example condition for two-line text\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FirmFacts;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAChC,MAAMC,KAAK,GAAG,CACZ;IAAEC,OAAO,EAAE,SAAS;IAAEC,IAAI,EAAE;EAA4B,CAAC,EACzD;IAAED,OAAO,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAA0D,CAAC,EACtF;IAAED,OAAO,EAAE,SAAS;IAAEC,IAAI,EAAE;EAA4B,CAAC,EACzD;IAAED,OAAO,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAA0D,CAAC,EACtF;IAAED,OAAO,EAAE,SAAS;IAAEC,IAAI,EAAE;EAA4B,CAAC,EACzD;IAAED,OAAO,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAA0D,CAAC,EACtF;IAAED,OAAO,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAA4B,CAAC,CACzD;EAED,oBACEJ,OAAA;IAAKK,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCN,OAAA;MAAKK,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BN,OAAA;QAAAM,QAAA,EAAM;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvBV,OAAA;QAAQK,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACNV,OAAA;MAAKK,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBJ,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBb,OAAA,CAACF,YAAY;QAEXK,OAAO,EAAES,IAAI,CAACT,OAAQ;QACtBW,UAAU,EAAEF,IAAI,CAACR,IAAK;QACtBW,SAAS,EAAEH,IAAI,CAACR,IAAI,CAACY,MAAM,GAAG,EAAG,CAAC;MAAA,GAH7BH,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GA7BIhB,SAAmB;AA+BzB,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}