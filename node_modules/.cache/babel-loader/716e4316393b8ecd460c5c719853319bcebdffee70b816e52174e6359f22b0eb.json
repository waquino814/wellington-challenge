{"ast":null,"code":"var _jsxFileName = \"/Users/wellingtonaquino/Documents/code_place/react/wellington-challenge/src/components/FirmFacts/FirmFacts.tsx\";\nimport React from 'react';\nimport FirmFactCard from '../FirmFactCard/FirmFactCard';\nimport './FirmFacts.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirmFacts = () => {\n  // Data for the cards with variant and text\n  const cards = [{\n    variant: 'default',\n    text: 'This is a one line button'\n  }, {\n    variant: 'border',\n    text: 'This is a two line button that terminates with ...'\n  }, {\n    variant: 'default',\n    text: 'This is a one line button'\n  }, {\n    variant: 'border',\n    text: 'This is a two line button that terminates with ...'\n  }, {\n    variant: 'default',\n    text: 'This is a one line button'\n  }, {\n    variant: 'border',\n    text: 'This is a two line button that terminates with ...'\n  }, {\n    variant: 'border',\n    text: 'This is a two line button that terminates with ...'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"firmFacts-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"firmFacts-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Firm Facts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"firmFacts\",\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(FirmFactCard, {\n        variant: card.variant,\n        buttonText: card.text // Pass button text here\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = FirmFacts;\nexport default FirmFacts;\nvar _c;\n$RefreshReg$(_c, \"FirmFacts\");","map":{"version":3,"names":["React","FirmFactCard","jsxDEV","_jsxDEV","FirmFacts","cards","variant","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","buttonText","_c","$RefreshReg$"],"sources":["/Users/wellingtonaquino/Documents/code_place/react/wellington-challenge/src/components/FirmFacts/FirmFacts.tsx"],"sourcesContent":["import React from 'react';\nimport FirmFactCard from '../FirmFactCard/FirmFactCard';\nimport './FirmFacts.scss';\n\ninterface Card {\n  variant: 'default' | 'border'; // Explicitly define the type of variant\n  text: string; // Button text\n}\n\nconst FirmFacts: React.FC = () => {\n  // Data for the cards with variant and text\n  const cards: Card[] = [\n    { variant: 'default', text: 'This is a one line button' },\n    { variant: 'border', text: 'This is a two line button that terminates with ...' },\n    { variant: 'default', text: 'This is a one line button' },\n    { variant: 'border', text: 'This is a two line button that terminates with ...' },\n    { variant: 'default', text: 'This is a one line button' },\n    { variant: 'border', text: 'This is a two line button that terminates with ...' },\n    { variant: 'border', text: 'This is a two line button that terminates with ...' }\n  ];\n\n  return (\n    <div className=\"firmFacts-wrapper\">\n      <div className=\"firmFacts-title\">\n        <h2>Firm Facts</h2>\n        <button className=\"close-button\">X</button>\n      </div>\n      <div className=\"firmFacts\">\n        {cards.map((card, index) => (\n          <FirmFactCard\n            key={index}\n            variant={card.variant}\n            buttonText={card.text}  // Pass button text here\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FirmFacts;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAChC;EACA,MAAMC,KAAa,GAAG,CACpB;IAAEC,OAAO,EAAE,SAAS;IAAEC,IAAI,EAAE;EAA4B,CAAC,EACzD;IAAED,OAAO,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAqD,CAAC,EACjF;IAAED,OAAO,EAAE,SAAS;IAAEC,IAAI,EAAE;EAA4B,CAAC,EACzD;IAAED,OAAO,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAqD,CAAC,EACjF;IAAED,OAAO,EAAE,SAAS;IAAEC,IAAI,EAAE;EAA4B,CAAC,EACzD;IAAED,OAAO,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAqD,CAAC,EACjF;IAAED,OAAO,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAqD,CAAC,CAClF;EAED,oBACEJ,OAAA;IAAKK,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCN,OAAA;MAAKK,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BN,OAAA;QAAAM,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBV,OAAA;QAAQK,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACNV,OAAA;MAAKK,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBJ,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBb,OAAA,CAACF,YAAY;QAEXK,OAAO,EAAES,IAAI,CAACT,OAAQ;QACtBW,UAAU,EAAEF,IAAI,CAACR,IAAK,CAAE;MAAA,GAFnBS,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GA7BId,SAAmB;AA+BzB,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}